---
pagination:
  data: collections.problems
  size: 1
  alias: problem
permalink: "{{ problem.data.page.url }}"
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{ problem.data.title }}</title>
    <link rel="stylesheet" href="/css/style.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/toolbar/prism-toolbar.min.css"
    />
    <script
      defer
      data-domain="aoc-24.nicole.computer"
      data-api="https://lively-dew-5ace.nicole-bda.workers.dev/api/event"
      src="https://lively-dew-5ace.nicole-bda.workers.dev/js/script.js"
    ></script>

    <style>
      .code-block pre {
        margin: 0 !important;
      }
    </style>
  </head>

  <body class="min-h-screen bg-gray-50">
    <div class="px-8 py-3 text-white bg-amber-400">
      <h1 class="text-3xl font-bold">{{siteConfig.title}}</h1>
    </div>

    <div class="max-w-3xl px-6 mx-auto">
      <header class="py-6">
        <h1 class="text-3xl font-bold">{{problem.data.title}}</h1>
        {%- if problem.data.shortDescription and
        problem.data.shortDescription.length > 0 -%}
        <p class="mt-4 text-gray-600">{{problem.data.shortDescription}}</p>
        {%- endif -%}
      </header>

      <div class="flex border-b border-gray-200">
        {% if problem.data.tabs.description.enabled %}
        <button data-tab="problem" class="tab-button tab-button-active">
          Problem
        </button>
        {% endif %} {% if problem.data.tabs.input.enabled %}
        <button data-tab="input" class="tab-button tab-button-inactive">
          Input
        </button>
        {% endif %}
        <button data-tab="code" class="tab-button tab-button-inactive">
          Code
        </button>
        {% if problem.data.tabs.notes.enabled %}
        <button data-tab="notes" class="tab-button tab-button-inactive">
          Notes
        </button>
        {% endif %}
      </div>

      <!-- Problem Tab-->
      {% if problem.data.tabs.description.enabled %}
      <div data-tab-content="problem" class="py-2">
        <div class="prose-block">
          <h2 class="mb-4 text-xl font-semibold">Description</h2>
          {{ problem.data.tabs.description.content | markdown | safe }}
        </div>
      </div>
      {% endif %}

      <!-- Input Tab -->
      {% if problem.data.tabs.input.enabled %}
      <div data-tab-content="input" class="py-2">
        <div class="code-block">
          <p class="code-block-header">input.txt</p>
          <div class="code-block-content">
            <pre><code>{{ problem.data.tabs.input.content }}</code></pre>
          </div>
        </div>
      </div>
      {% endif %}

      <!-- Code Tab -->
      <div data-tab-content="code" class="py-2">
        {% for file in problem.data.tabs.sourceFiles %}
        <div class="code-block">
          <p class="code-block-header">{{ file.name }}</p>
          <div class="code-block-content">
            <pre><code class="language-{{ file.language }}">{{ file.content }}</code></pre>
          </div>
        </div>
        {% endfor %}
      </div>

      <!-- Notes Tab -->
      {% if problem.data.tabs.notes.enabled %}
      <div data-tab-content="notes" class="py-2">
        <div class="prose-block">
          <h2 class="mb-4 text-xl font-semibold">Notes</h2>
          {{ problem.data.tabs.notes.content | markdown | safe }}
        </div>
      </div>
      {% endif %}
    </div>

    <script>
      function showTab(tabId) {
        // Remove active states from all tabs
        document.querySelectorAll("[data-tab]").forEach((t) => {
          t.classList.remove("tab-button-active")
          t.classList.add("tab-button-inactive")
        })

        // Hide all content
        document.querySelectorAll("[data-tab-content]").forEach((content) => {
          content.classList.add("hidden")
        })

        // Show selected content and activate tab
        const content = document.querySelector(`[data-tab-content="${tabId}"]`)
        const tab = document.querySelector(`[data-tab="${tabId}"]`)
        content.classList.remove("hidden")
        tab.classList.remove("tab-button-inactive")
        tab.classList.add("tab-button-active")
      }

      // Add click handlers
      document.querySelectorAll("[data-tab]").forEach((tab) => {
        tab.addEventListener("click", () => showTab(tab.dataset.tab))
      })

      // Show initial tab
      showTab("code")
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/toolbar/prism-toolbar.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js"></script>
  </body>
</html>
